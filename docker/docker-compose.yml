version: '3'

services:
  db:
    image: postgres:14.6
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - 5430:5432
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/scripts:/docker-entrypoint-initdb.d

#   db:
#     image: mysql:8.0
#     restart: always
#     environment:
#       - MYSQL_DATABASE=${DATABASE_NAME}
#       - MYSQL_USER=${DATABASE_USER}
#       - MYSQL_PASSWORD=${DATABASE_PASSWORD}
#       - MYSQL_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}
#     ports:
#       - "3306:3306"
#     volumes:
#       - db-data:/var/lib/mysql
#       - ./db/scripts:/docker-entrypoint-initdb.d

  php-fpm:
    container_name: php-fpm
    build:
      context: ./php-fpm
    depends_on:
      - db
    environment:
      - XDEBUG_CONFIG=${XDEBUG_CONFIG}
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      - APP_ENV=${APP_ENV}
      - APP_SECRET=${APP_SECRET}
#       - DATABASE_URL=mysql://${DATABASE_USER}:${DATABASE_PASSWORD}@db:3306/${DATABASE_NAME}?serverVersion=8.0
      - DATABASE_URL=postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@db:5432/${DATABASE_NAME}?schema=public
      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST}
    volumes:
      - ../app:/var/app

  nginx:
    container_name: nginx
    build:
      context: ./nginx
    volumes:
      - ../app:/var/app
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites/:/etc/nginx/sites-available
      - ./nginx/conf.d/:/etc/nginx/conf.d
    depends_on:
      - php-fpm
    ports:
      - "80:80"
      - "443:443"

#  elasticsearch:
#    container_name: elasticsearch
#    image: elasticsearch:5-alpine
#    ports:
#      - "9200:9200"
#

volumes:
  db-data:
    name: mwl_mysql
