parameters:
    event_table_name: 'events'
    basket_index: 'basket'
    products_path: '%kernel.project_dir%/../products.json'

services:
    _defaults:
        autowire: false
        autoconfigure: false

    app.subscriber.request:
        class: App\EventSubscriber\RequestSubscriber
        tags:
            - { name: 'kernel.event_subscriber' }

    app.controller.product:
        class: App\Controller\ProductController
        arguments:
            - '@product.repository'
        public: true

    app.controller.basket:
        class: App\Controller\BasketController
        arguments:
            - '@broadway.command_handling.command_bus'
            - '@broadway.uuid.generator'
            - '@app.read_model.repository.basket'
            - '@product.repository'
        public: true

    product.repository_filesystem:
        class: Product\Repository\FileSystem

    product.repository:
        class: Product\Repository\ProductRepository
        arguments:
            - '%products_path%'
            - '@product.repository_filesystem'

    broadway.stack.request_id.monolog_processor:
        class: Qandidate\Stack\RequestId\MonologProcessor
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 255 }
            - { name: monolog.processor }

    app.service.drop_and_create_read_model:
        class: App\Service\DropAndCreateReadModel
        arguments:
            - "@broadway.elasticsearch.client"
            -
                - "%basket_index%"

    app.service.drop_and_create_event_store:
        class: App\Service\DropAndCreateEventStore
        arguments:
            - "@doctrine.dbal.default_connection"
            - "@broadway.event_store.dbal"

    app.command.drop_and_create_read_model:
        class: App\Command\ReadModelDropAndCreateCommand
        arguments:
            - "@app.service.drop_and_create_read_model"
        tags:
            - { name: console.command }

    app.command.drop_and_create_event_store:
        class: App\Command\EventStoreDropAndCreateCommand
        arguments:
            - "@app.service.drop_and_create_event_store"
        tags:
            - { name: console.command }
