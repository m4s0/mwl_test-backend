# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    container.dumper.inline_factories: true
    router.request_context.scheme: '%env(API_ENTRYPOINT_SCHEME)%'
    router.request_context.host: '%env(API_ENTRYPOINT_HOST)%'
    event_table_name: 'events'
    elasticsearch: '%env(ELASTICSEARCH_HOST)%'
    basket_index: 'basket'
    products_path: '%kernel.project_dir%/products.json'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: false
        autoconfigure: false

#    app.controller.product:
#        class: App\Controller\ProductController
#        arguments:
#            - '@product.repository'
#        public: true
#
#    app.controller.basket:
#        class: App\Controller\BasketController
#        arguments:
#            - '@broadway.command_handling.command_bus'
#            - '@broadway.uuid.generator'
#            - '@app.read_model.repository.basket'
#            - '@product.repository'
#        public: true

    product.repository_filesystem:
        class: Domain\Product\Repository\FileSystem

    product.repository:
        class: Domain\Product\Repository\ProductRepository
        arguments:
            - '%products_path%'
            - '@product.repository_filesystem'

###
### BROADWAY ###
###

    broadway.stack.request_id.monolog_processor:
        class: Qandidate\Stack\RequestId\MonologProcessor
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 255 }
            - { name: monolog.processor }

    app.service.drop_and_create_read_model:
        class: App\Service\DropAndCreateReadModel
        arguments:
            - "@broadway.elasticsearch.client"
            -
                - "%basket_index%"

    app.service.drop_and_create_event_store:
        class: App\Service\DropAndCreateEventStore
        arguments:
            - "@doctrine.dbal.default_connection"
            - "@broadway.event_store.dbal"

    app.command.drop_and_create_read_model:
        class: App\Command\ReadModelDropAndCreateCommand
        arguments:
            - "@app.service.drop_and_create_read_model"
        tags:
            - { name: console.command }

    app.command.drop_and_create_event_store:
        class: App\Command\EventStoreDropAndCreateCommand
        arguments:
            - "@app.service.drop_and_create_event_store"
        tags:
            - { name: console.command }



###
### API PLATFORM ###
###

    App\OpenApi\JwtDecorator:
        decorates: 'api_platform.openapi.factory'
        arguments: ['@.inner']

    App\DataProvider\BasketCollectionDataProvider:
        arguments:
            - "@app.read_model.repository.basket"
        tags: [ { name: 'api_platform.collection_data_provider', priority: 2 } ]

    App\DataProvider\ProductCollectionDataProvider:
        arguments:
            - '@product.repository'
        tags: [ { name: 'api_platform.collection_data_provider', priority: 2 } ]

    App\DataProvider\BasketItemDataProvider:
        arguments:
            - "@app.read_model.repository.basket"
        tags: [ 'api_platform.item_data_provider' ]

    App\DataProvider\ProductItemDataProvider:
        arguments:
            - '@product.repository'
        tags: [ 'api_platform.item_data_provider' ]

    App\DataPersister\BasketDataPersister:
        arguments:
            - '@broadway.command_handling.command_bus'
            - '@broadway.uuid.generator'
        tags: [ 'api_platform.data_persister' ]

    App\DataTransformer\BasketInputDataTransformer:
        tags: [ 'api_platform.data_transformer' ]

    App\DataTransformer\BasketOutputDataTransformer:
        tags: [ 'api_platform.data_transformer' ]
